/**
 * üéÆ RootGames - Tipos TypeScript para Entidades de Jogos
 *
 * Este arquivo cont√©m todas as defini√ß√µes de tipos TypeScript para:
 * - Entidades principais (Game, Category, Platform, etc.)
 * - Interfaces de m√≠dia e arquivos
 * - Tipos para filtros e busca
 * - Interfaces de resposta da API
 * - Tipos para otimiza√ß√£o de imagens
 *
 * @author Jonathan Martins
 * @version 1.0.0
 * @since 2025
 */

/**
 * üéÆ Interface Principal - Jogo
 *
 * Representa um jogo na plataforma RootGames com todas suas propriedades
 * e relacionamentos com outras entidades.
 */
export interface Game {
  id: number; // ID √∫nico do jogo
  name: string; // Nome do jogo
  slug: string; // Slug para URLs amig√°veis
  short_description?: string; // Descri√ß√£o curta (opcional)
  description?: string; // Descri√ß√£o completa (opcional)
  price: number; // Pre√ßo do jogo
  release_date?: string; // Data de lan√ßamento (opcional)
  rating?: 'BR0' | 'BR10' | 'BR12' | 'BR14' | 'BR16' | 'BR18'; // Classifica√ß√£o indicativa
  cover?: MediaFile; // Imagem de capa (opcional)
  gallery?: MediaFile[]; // Galeria de imagens (opcional)
  categories?: Category[]; // Categorias do jogo (opcional)
  platforms?: Platform[]; // Plataformas suportadas (opcional)
  developers?: Developer[]; // Desenvolvedores (opcional)
  publisher?: Publisher; // Publicadora (opcional)
  createdAt: string; // Data de cria√ß√£o
  updatedAt: string; // Data de atualiza√ß√£o
  publishedAt?: string; // Data de publica√ß√£o (opcional)
}

/**
 * üìÇ Interface - Categoria
 *
 * Representa uma categoria de jogos (ex: A√ß√£o, RPG, Estrat√©gia)
 */
export interface Category {
  id: number; // ID √∫nico da categoria
  name: string; // Nome da categoria
  slug: string; // Slug para URLs amig√°veis
  description?: string; // Descri√ß√£o da categoria
  icon?: string; // √çcone da categoria (emoji ou classe CSS)
  color?: string; // Cor da categoria (hex)
  is_active: boolean; // Se a categoria est√° ativa
  sort_order: number; // Ordem de exibi√ß√£o
  games?: Game[]; // Jogos desta categoria
  createdAt: string; // Data de cria√ß√£o
  updatedAt: string; // Data de atualiza√ß√£o
}

/**
 * üéÆ Interface - Plataforma
 *
 * Representa uma plataforma de jogos (ex: PC, PlayStation, Xbox)
 */
export interface Platform {
  id: number; // ID √∫nico da plataforma
  name: string; // Nome da plataforma
  slug: string; // Slug para URLs amig√°veis
  description?: string; // Descri√ß√£o da plataforma
  logo?: MediaFile; // Logo da plataforma
  company?: string; // Empresa respons√°vel
  release_year?: number; // Ano de lan√ßamento
  is_active: boolean; // Se a plataforma est√° ativa
  sort_order: number; // Ordem de exibi√ß√£o
  games?: Game[]; // Jogos desta plataforma
  createdAt: string; // Data de cria√ß√£o
  updatedAt: string; // Data de atualiza√ß√£o
}

/**
 * üë®‚Äçüíª Interface - Desenvolvedor
 *
 * Representa um desenvolvedor de jogos
 */
export interface Developer {
  id: number; // ID √∫nico do desenvolvedor
  name: string; // Nome do desenvolvedor
  slug: string; // Slug para URLs amig√°veis
  description?: string; // Descri√ß√£o do desenvolvedor
  logo?: MediaFile; // Logo do desenvolvedor
  website?: string; // Site oficial
  country?: string; // Pa√≠s de origem
  founded_year?: number; // Ano de funda√ß√£o
  is_active: boolean; // Se o desenvolvedor est√° ativo
  sort_order: number; // Ordem de exibi√ß√£o
  games?: Game[]; // Jogos deste desenvolvedor
  createdAt: string; // Data de cria√ß√£o
  updatedAt: string; // Data de atualiza√ß√£o
}

/**
 * üè¢ Interface - Publicadora
 *
 * Representa uma publicadora de jogos
 */
export interface Publisher {
  id: number; // ID √∫nico da publicadora
  name: string; // Nome da publicadora
  slug: string; // Slug para URLs amig√°veis
  description?: string; // Descri√ß√£o da publicadora
  logo?: MediaFile; // Logo da publicadora
  website?: string; // Site oficial
  country?: string; // Pa√≠s de origem
  founded_year?: number; // Ano de funda√ß√£o
  is_active: boolean; // Se a publicadora est√° ativa
  sort_order: number; // Ordem de exibi√ß√£o
  games?: Game[]; // Jogos desta publicadora
  createdAt: string; // Data de cria√ß√£o
  updatedAt: string; // Data de atualiza√ß√£o
}

/**
 * üìÅ Interface - Arquivo de M√≠dia
 *
 * Representa um arquivo de m√≠dia (imagem, v√≠deo, etc.)
 */
export interface MediaFile {
  id: number; // ID √∫nico do arquivo
  name: string; // Nome do arquivo
  alternativeText?: string; // Texto alternativo para acessibilidade
  caption?: string; // Legenda da m√≠dia
  width?: number; // Largura da imagem
  height?: number; // Altura da imagem
  formats?: {
    // Formatos otimizados
    thumbnail?: MediaFormat; // Thumbnail pequeno
    small?: MediaFormat; // Vers√£o pequena
    medium?: MediaFormat; // Vers√£o m√©dia
    large?: MediaFormat; // Vers√£o grande
  };
  hash: string; // Hash √∫nico do arquivo
  ext?: string; // Extens√£o do arquivo
  mime: string; // Tipo MIME
  size: number; // Tamanho em bytes
  url: string; // URL de acesso
  previewUrl?: string; // URL de preview
  provider: string; // Provedor de armazenamento
  provider_metadata?: any; // Metadados do provedor
  createdAt: string; // Data de cria√ß√£o
  updatedAt: string; // Data de atualiza√ß√£o
}

/**
 * üìê Interface - Formato de M√≠dia
 *
 * Representa um formato espec√≠fico de um arquivo de m√≠dia
 */
export interface MediaFormat {
  name: string; // Nome do formato
  hash: string; // Hash √∫nico do arquivo
  ext: string; // Extens√£o do arquivo
  mime: string; // Tipo MIME
  width: number; // Largura da imagem
  height: number; // Altura da imagem
  size: number; // Tamanho em bytes
  url: string; // URL de acesso
}

/**
 * üîç Interface - Filtros de Busca
 *
 * Define os filtros dispon√≠veis para busca de jogos
 */
export interface GameFilters {
  name?: string; // Nome do jogo (busca parcial)
  price_min?: number; // Pre√ßo m√≠nimo
  price_max?: number; // Pre√ßo m√°ximo
  rating?: string; // Classifica√ß√£o indicativa
  category?: string; // Slug da categoria
  platform?: string; // Slug da plataforma
  developer?: string; // Slug do desenvolvedor
  publisher?: string; // Slug da publicadora
  release_date_from?: string; // Data de lan√ßamento (in√≠cio)
  release_date_to?: string; // Data de lan√ßamento (fim)
}

/**
 * üìä Interface - Ordena√ß√£o
 *
 * Define como os resultados devem ser ordenados
 */
export interface GameSort {
  field: 'name' | 'price' | 'release_date' | 'createdAt' | 'updatedAt'; // Campo para ordena√ß√£o
  order: 'asc' | 'desc'; // Dire√ß√£o da ordena√ß√£o
}

/**
 * üìÑ Interface - Metadados de Pagina√ß√£o
 *
 * Informa√ß√µes sobre a pagina√ß√£o dos resultados
 */
export interface PaginationMeta {
  page: number; // P√°gina atual
  pageSize: number; // Tamanho da p√°gina
  pageCount: number; // Total de p√°ginas
  total: number; // Total de itens
}

/**
 * üì° Interface - Resposta da API
 *
 * Estrutura padr√£o para respostas da API
 */
export interface ApiResponse<T> {
  data: T; // Dados da resposta
  meta: {
    // Metadados
    pagination: PaginationMeta; // Informa√ß√µes de pagina√ß√£o
    [key: string]: any; // Outros metadados
  };
}

/**
 * üîé Interface - Par√¢metros de Busca
 *
 * Par√¢metros completos para busca de jogos
 */
export interface GameSearchParams {
  filters?: GameFilters; // Filtros aplicados
  sort?: GameSort; // Ordena√ß√£o
  pagination?: {
    // Configura√ß√£o de pagina√ß√£o
    page?: number; // P√°gina desejada
    pageSize?: number; // Tamanho da p√°gina
  };
  populate?: string[]; // Relacionamentos a incluir
}

/**
 * üìà Interface - Estat√≠sticas
 *
 * Estat√≠sticas gerais da plataforma
 */
export interface GameStats {
  totalGames: number; // Total de jogos
  averagePrice: number; // Pre√ßo m√©dio
  totalCategories: number; // Total de categorias
  totalPlatforms: number; // Total de plataformas
  totalDevelopers: number; // Total de desenvolvedores
  totalPublishers: number; // Total de publicadoras
  priceRange: {
    min: number; // Pre√ßo m√≠nimo
    max: number; // Pre√ßo m√°ximo
  };
  ratingDistribution: {
    [key: string]: number; // Distribui√ß√£o por classifica√ß√£o
  };
}

/**
 * üñºÔ∏è Interface - Resultado de Otimiza√ß√£o de Imagem
 *
 * Resultado do processo de otimiza√ß√£o de imagem
 */
export interface ImageOptimizationResult {
  originalSize: number; // Tamanho original em bytes
  optimizedSize: number; // Tamanho otimizado em bytes
  compressionRatio: number; // Percentual de compress√£o
  format: string; // Formato final
  path: string; // Caminho do arquivo otimizado
  success: boolean; // Se a otimiza√ß√£o foi bem-sucedida
  error?: string; // Mensagem de erro (se houver)
}

/**
 * ‚öôÔ∏è Interface - Op√ß√µes de Otimiza√ß√£o
 *
 * Configura√ß√µes para otimiza√ß√£o de imagens
 */
export interface OptimizationOptions {
  quality?: number; // Qualidade da imagem (0-100)
  format?: 'jpeg' | 'png' | 'webp'; // Formato de sa√≠da
  width?: number; // Largura desejada
  height?: number; // Altura desejada
  resize?: boolean; // Se deve redimensionar
}
